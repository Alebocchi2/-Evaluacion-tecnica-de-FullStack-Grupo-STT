{"ast":null,"code":"import { toDisplayString as _toDisplayString, createTextVNode as _createTextVNode, resolveComponent as _resolveComponent, withCtx as _withCtx, openBlock as _openBlock, createBlock as _createBlock } from \"vue\";\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_router_link = _resolveComponent(\"router-link\");\n\n  return _openBlock(), _createBlock(_component_router_link, {\n    class: \"event-link\",\n    to: {\n      name: 'Episodio'\n    }\n  }, {\n    default: _withCtx(() => [_createTextVNode(\" Episodio: \" + _toDisplayString($data.episodio), 1\n    /* TEXT */\n    )]),\n    _: 1\n    /* STABLE */\n\n  });\n}","map":{"version":3,"mappings":";;;;uBACCA,aAOcC,sBAPd,EAOc;AANbC,SAAK,EAAC,YAMO;AALZC,MAAE,EAAE;;AAAA;AAKQ,GAPd;sBAKC,MACU,kBADV,gBACUC,iBAAGC,cAAH,GAAW;AAAA;KAAX;;;;GANX","names":["_createBlock","_component_router_link","class","to","_toDisplayString","$data"],"sourceRoot":"","sources":["D:\\Vue JS\\Rick and Morty Api\\Nueva\\src\\components\\ComponenteEpisodio.vue"],"sourcesContent":["<template>\r\n\t<router-link\r\n\t\tclass=\"event-link\"\r\n\t\t:to=\"{\r\n\t\t\tname: 'Episodio'\r\n\t\t}\"\r\n\t>\r\n\t\tEpisodio: {{ episodio }}\r\n\t</router-link>\r\n</template>\r\n\r\n<script>\r\nimport EventService from \"@/services/EventService.js\";\r\n\r\nexport default {\r\n\tprops: [\"event\"],\r\n\r\n\tdata() {\r\n\t\treturn {\r\n\t\t\tepisodio: null\r\n\t\t};\r\n\t},\r\n\r\n\tcreated() {\r\n\t\tconst e = this.event.slice(40);\r\n\t\tEventService.getEpisodioXid(e)\r\n\t\t\t.then((response) => {\r\n\t\t\t\tconsole.log(\"Episodio:\", response.data);\r\n\t\t\t\tthis.episodio = response.data;\r\n\t\t\t})\r\n\t\t\t.catch((error) => {\r\n\t\t\t\tconsole.log(error);\r\n\t\t\t});\r\n\t}\r\n};\r\n</script>\r\n"]},"metadata":{},"sourceType":"module"}