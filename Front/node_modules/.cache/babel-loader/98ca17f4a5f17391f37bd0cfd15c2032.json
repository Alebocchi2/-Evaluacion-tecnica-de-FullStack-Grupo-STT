{"ast":null,"code":"import { resolveComponent as _resolveComponent, openBlock as _openBlock, createBlock as _createBlock } from \"vue\";\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_router_link = _resolveComponent(\"router-link\");\n\n  return _openBlock(), _createBlock(_component_router_link, {\n    class: \"event-link\",\n    to: {\n      name: 'Episodio',\n      params: {\n        id: $data.episodio\n      }\n    }\n  }, null, 8\n  /* PROPS */\n  , [\"to\"]);\n}","map":{"version":3,"mappings":";;;;uBACCA,aAOcC,sBAPd,EAOc;AANbC,SAAK,EAAC,YAMO;AALZC,MAAE;sBAAA;;YAA4CC;;AAA5C;AAKU,GAPd;;AAAA","names":["_createBlock","_component_router_link","class","to","$data"],"sourceRoot":"","sources":["D:\\Vue JS\\Rick and Morty Api\\Nueva\\src\\components\\ComponenteEpisodio.vue"],"sourcesContent":["<template>\r\n\t<router-link\r\n\t\tclass=\"event-link\"\r\n\t\t:to=\"{\r\n\t\t\tname: 'Episodio',\r\n\t\t\tparams: { id: episodio }\r\n\t\t}\"\r\n\t>\r\n\t</router-link>\r\n</template>\r\n\r\n<script>\r\nimport EventService from \"@/services/EventService.js\";\r\n\r\nexport default {\r\n\tprops: [\"event\"],\r\n\r\n\tdata() {\r\n\t\treturn {\r\n\t\t\tepisodio: null\r\n\t\t};\r\n\t},\r\n\r\n\tcreated() {\r\n\t\tconst e = this.event.slice(41);\r\n\t\tEventService.getEpisodioXid(e)\r\n\t\t\t.then((response) => {\r\n\t\t\t\tconsole.log(\"Episodio:\", response.data.results);\r\n\t\t\t\tthis.episodio = response.data.results;\r\n\t\t\t})\r\n\t\t\t.catch((error) => {\r\n\t\t\t\tconsole.log(error);\r\n\t\t\t});\r\n\t}\r\n};\r\n</script>\r\n"]},"metadata":{},"sourceType":"module"}